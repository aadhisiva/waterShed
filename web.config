<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <system.webServer>
    <rewrite>
      <rules>

        <!-- Handle React Router paths -->
        <rule name="React Routes" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            <add input="{REQUEST_URI}" pattern="^/watershed" />
          </conditions>
          <action type="Rewrite" url="/watershed/index.html" />
        </rule>
      </rules>
    </rewrite>

    <security>
      <requestFiltering>
        <!-- Allow only specific HTTP verbs -->
        <verbs>
          <add verb="GET" allowed="true" />
          <add verb="POST" allowed="true" />
          <add verb="PUT" allowed="false" />
          <add verb="DELETE" allowed="false" />
          <add verb="OPTIONS" allowed="false" />
        </verbs>

        <!-- Block access to sensitive files -->
        <hiddenSegments>
          <add segment="appsettings.json" />
          <add segment="*.bak" />
        </hiddenSegments>

        <!-- Block specific file types -->
        <fileExtensions>
          <add fileExtension=".exe" allowed="false" />
          <add fileExtension=".dll" allowed="false" />
          <add fileExtension=".bat" allowed="false" />
          <add fileExtension=".ts" allowed="false" />
          <add fileExtension=".tsx" allowed="false" />
          <add fileExtension=".css" allowed="false" />
        </fileExtensions>
      </requestFiltering>
    </security>

    <httpProtocol>
      <customHeaders>
        <add name="X-Content-Type-Options" value="nosniff" />
        <add name="X-Frame-Options" value="DENY" />
        <add name="X-XSS-Protection" value="1; mode=block" />
        <add name="Strict-Transport-Security" value="max-age=31536000; includeSubDomains" />
      </customHeaders>
    </httpProtocol>
  </system.webServer>
</configuration>


<!-- Redirect HTTP to HTTPS -->
<rule name="Redirect to HTTPS" stopProcessing="true">
    <match url="(.*)" />
    <conditions>
        <add input="{HTTP_X_FORWARDED_PROTO}" pattern="^http$" negate="true" />
    </conditions>
    <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" redirectType="Permanent" />
</rule>